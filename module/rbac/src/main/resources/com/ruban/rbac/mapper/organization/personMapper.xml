<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruban.rbac.dao.organization.IPersonMapper">

	<select id="selectAll" resultType="com.ruban.rbac.domain.organization.Person">
		SELECT
			s.ID as id, s.CODE as code, s.NAME as name, s.BIRTHDAY as birthday, s.EMAIL as email, s.SEX as sex, 
			s.CARDID as cardId, s.PHOTO as photo, s.ADDRESS as address,
			s.ENTRY_DATE as entryDate, s.DEPARTURE_DATE as departureDate, s.SALARY as salary, s.MEMO as memo, 
			s.ADD_TIME as addTime, s.MOD_TIME as modTime, s.UPDATE_LOCK as updateLock, s.ORDER_CODE as orderCode,
			c.ID as companyId, c.name as companyName, j.ID as jobId, j.NAME as jobName, t.ID as titleId, t.NAME as titleName,
			d.ID as departmentId, d.name as departmentName
		FROM ORG_T_PERSON s 
		LEFT JOIN ORG_T_COMPANY c on s.COMPANY_ID = c.ID
		LEFT JOIN ORG_T_DEPARTMENT d on s.DEPARTMENT_ID = d.ID
		LEFT JOIN ORG_T_TITLE t on s.TITLE_ID = t.ID
		LEFT JOIN ORG_T_JOB j on s.JOB_ID = j.ID
		ORDER BY s.ORDER_CODE
	</select>
	
	<select id="selectWithCondition" resultType="com.ruban.rbac.domain.organization.Person">
		SELECT
			s.ID as id, s.CODE as code, s.NAME as name, s.BIRTHDAY as birthday, s.EMAIL as email, s.SEX as sex, 
			s.CARDID as cardId, s.PHOTO as photo, s.ADDRESS as address,
			s.ENTRY_DATE as entryDate, s.DEPARTURE_DATE as departureDate, s.SALARY as salary, s.MEMO as memo, 
			s.ADD_TIME as addTime, s.MOD_TIME as modTime, s.UPDATE_LOCK as updateLock, s.ORDER_CODE as orderCode,
			c.ID as companyId, c.name as companyName, j.ID as jobId, j.NAME as jobName, t.ID as titleId, t.NAME as titleName,
			d.ID as departmentId, d.name as departmentName
		FROM ORG_T_PERSON s 
		LEFT JOIN ORG_T_COMPANY c on s.COMPANY_ID = c.ID
		LEFT JOIN ORG_T_DEPARTMENT d on s.DEPARTMENT_ID = d.ID
		LEFT JOIN ORG_T_TITLE t on s.TITLE_ID = t.ID
		LEFT JOIN ORG_T_JOB j on s.JOB_ID = j.ID WHERE 1 = 1 
		<if test="code != null and code != ''">
			and s.code = #{code}
		</if>
		<if test="name != null and name != ''">
			and s.name like CONCAT('%',#{name},'%')
		</if>
		<if test="companyId != null">
			and s.COMPANY_ID = #{companyId}
		</if>
		<if test="departmentId != null">
			and s.DEPARTMENT_ID = #{departmentId}
		</if>
		ORDER BY s.ORDER_CODE
	</select>

	<select id="findById" parameterType="java.lang.Long" resultType="com.ruban.rbac.domain.organization.Person">
		SELECT
			s.ID as id, s.CODE as code, s.NAME as name, s.BIRTHDAY as birthday, s.EMAIL as email, s.SEX as sex, 
			s.CARDID as cardId, s.PHOTO as photo, s.ADDRESS as address,
			s.ENTRY_DATE as entryDate, s.DEPARTURE_DATE as departureDate, s.SALARY as salary, s.MEMO as memo, 
			s.ADD_TIME as addTime, s.MOD_TIME as modTime, s.UPDATE_LOCK as updateLock, s.ORDER_CODE as orderCode,
			c.ID as companyId, c.name as companyName, j.ID as jobId, j.NAME as jobName, t.ID as titleId, t.NAME as titleName,
			d.ID as departmentId, d.name as departmentName
		FROM ORG_T_PERSON s 
		LEFT JOIN ORG_T_COMPANY c on s.COMPANY_ID = c.ID
		LEFT JOIN ORG_T_DEPARTMENT d on s.DEPARTMENT_ID = d.ID
		LEFT JOIN ORG_T_TITLE t on s.TITLE_ID = t.ID
		LEFT JOIN ORG_T_JOB j on s.JOB_ID = j.ID
		WHERE s.id = #{id}
		ORDER BY s.ORDER_CODE
	</select>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		DELETE FROM ORG_T_PERSON
		WHERE id = #{id}
	</delete>
	
	<delete id="deleteByIds" parameterType="java.lang.String">
		DELETE FROM ORG_T_PERSON
		WHERE id in 
        <foreach item="ids" collection="array" open="(" separator="," close=")">  
        	#{ids}  
        </foreach> 
	</delete>
	
	<select id="countByParentId" parameterType="java.lang.Long" resultType="java.lang.Integer">
		SELECT 
			count(*)
		FROM ORG_T_PERSON
		WHERE PARENT_ID = #{id}
	</select>
	
	<insert id="insert" parameterType="com.ruban.rbac.domain.organization.Person" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO ORG_T_PERSON(
			CODE, NAME, BIRTHDAY, EMAIL, ADDRESS, SEX, CARDID, PHOTO, ENTRY_DATE, DEPARTURE_DATE, SALARY, MEMO, 
			ADD_TIME, ADD_USERID, MOD_TIME, MOD_USERID, UPDATE_LOCK, ORDER_CODE,
			COMPANY_ID, JOB_ID, TITLE_ID, DEPARTMENT_ID
		)
		VALUES(
			#{code, jdbcType=VARCHAR},
			#{name, jdbcType=VARCHAR},
			#{birthday, jdbcType=VARCHAR},
			#{email, jdbcType=VARCHAR},
			#{address, jdbcType=VARCHAR},
			#{sex, jdbcType=TINYINT},
			#{cardid, jdbcType=VARCHAR},
			#{photo, jdbcType=LONGVARCHAR},
			#{entryDate, jdbcType=VARCHAR},
			#{departureDate, jdbcType=VARCHAR},
			#{salary, jdbcType=VARCHAR},
			#{memo, jdbcType=VARCHAR},
			#{addTime, jdbcType=TIMESTAMP},
			#{addUserId, jdbcType=INTEGER},
			#{modTime, jdbcType=TIMESTAMP},
			#{modUserId, jdbcType=INTEGER},
			#{updateLock, jdbcType=VARCHAR},
			#{orderCode, jdbcType=TINYINT},
			#{companyId, jdbcType=INTEGER},
			#{jobId, jdbcType=INTEGER},
			#{titleId, jdbcType=INTEGER},
			#{departmentId, jdbcType=INTEGER}
		)
	</insert>
	
	<update id="update" parameterType="com.ruban.rbac.domain.organization.Person">
		UPDATE ORG_T_PERSON
		SET
			CODE = #{code, jdbcType=VARCHAR},
			NAME = #{name, jdbcType=VARCHAR},
			BIRTHDAY = #{birthday, jdbcType=VARCHAR},
			EMAIL = #{email, jdbcType=VARCHAR},
			ADDRESS = #{address, jdbcType=VARCHAR},
			SEX = #{sex, jdbcType=TINYINT},
			CARDID = #{cardid, jdbcType=VARCHAR},
			PHOTO = #{photo, jdbcType=LONGVARCHAR},
			ENTRY_DATE = #{entryDate, jdbcType=VARCHAR},
			DEPARTURE_DATE = #{departureDate, jdbcType=VARCHAR},
			SALARY = #{salary, jdbcType=VARCHAR},
			MEMO = #{memo, jdbcType=VARCHAR},
			MOD_TIME = #{modTime, jdbcType=TIMESTAMP},
			MOD_USERID = #{modUserId, jdbcType=INTEGER},
			UPDATE_LOCK = #{updateLock, jdbcType=VARCHAR},
			COMPANY_ID = #{companyId, jdbcType=INTEGER},
			JOB_ID = #{jobId, jdbcType=INTEGER},
			TITLE_ID = #{titleId, jdbcType=INTEGER},
			DEPARTMENT_ID = #{departmentId, jdbcType=INTEGER}
		WHERE ID = #{id, jdbcType=INTEGER} and UPDATE_LOCK = #{holdLock, jdbcType=VARCHAR}
	</update>
	
	<update id="updateOrderCode" parameterType="com.ruban.rbac.domain.organization.Person">
		UPDATE ORG_T_PERSON
		SET 
			ORDER_CODE = #{1, jdbcType=TINYINT}
		WHERE ID = #{0, jdbcType=INTEGER}
	</update>
</mapper>