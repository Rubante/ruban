<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruban.rbac.dao.authz.IAccountMapper">

	<select id="selectAll" resultType="com.ruban.rbac.domain.authz.Account">
		SELECT 
			s.ID as id, s.ACCOUNT_NO as accountNo, s.PASSWORD as password, s.NAME as name, 
			s.LAST_LOGIN_TIME as lastLoginTime, s.MEMO as memo, s.STATE as state,
			s.PERSON_ID as personId, p.name as personName,
			s.ADD_TIME as addTime, s.ADD_USER_ID as addUserId, s.MOD_TIME as modTime, s.MOD_USER_ID as modUserId, s.UPDATE_LOCK as updateLock
		FROM AUTHZ_T_ACCOUNT s 
		LEFT JOIN ORG_T_PERSON p on s.PERSON_ID = p.ID
		ORDER BY s.MOD_TIME desc
	</select>
	
	<select id="selectWithCondition" resultType="com.ruban.rbac.domain.authz.Account">
		SELECT 
			s.ID as id, s.ACCOUNT_NO as accountNo, s.PASSWORD as password, s.NAME as name, 
			s.LAST_LOGIN_TIME as lastLoginTime, s.MEMO as memo, s.STATE as state,
			s.PERSON_ID as personId, p.name as personName,
			s.ADD_TIME as addTime, s.ADD_USER_ID as addUserId, s.MOD_TIME as modTime, s.MOD_USER_ID as modUserId, s.UPDATE_LOCK as updateLock
		FROM AUTHZ_T_ACCOUNT s 
		LEFT JOIN ORG_T_PERSON p on s.PERSON_ID = p.ID
		WHERE 1 = 1 
		<if test="name != null and name != ''">
			and s.name like "%" + #{name} + "%"
		</if>
		<if test="personId != null">
			and s.PERSON_ID = #{personId}
		</if>
		ORDER BY s.MOD_TIME desc
	</select>

	<select id="findById" parameterType="java.lang.Long" resultType="com.ruban.rbac.domain.authz.Account">
		SELECT 
			s.ID as id, s.ACCOUNT_NO as accountNo, s.PASSWORD as password, s.NAME as name, 
			s.LAST_LOGIN_TIME as lastLoginTime, s.MEMO as memo, s.STATE as state,
			s.PERSON_ID as personId, p.name as personName,
			s.ADD_TIME as addTime, s.ADD_USER_ID as addUserId, s.MOD_TIME as modTime, s.MOD_USER_ID as modUserId, s.UPDATE_LOCK as updateLock
		FROM AUTHZ_T_ACCOUNT s 
		LEFT JOIN ORG_T_PERSON p on s.PERSON_ID = p.ID
		WHERE s.id = #{id}
	</select>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		DELETE FROM AUTHZ_T_ACCOUNT
		WHERE id = #{id}
	</delete>
	
	<delete id="deleteByIds" parameterType="java.lang.String">
		DELETE FROM AUTHZ_T_ACCOUNT
		WHERE id in 
        <foreach item="ids" collection="array" open="(" separator="," close=")">  
        	#{ids}  
        </foreach> 
	</delete>
	
	<insert id="insert" parameterType="com.ruban.rbac.domain.authz.Account" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO AUTHZ_T_ACCOUNT(
			ACCOUNT_NO, PASSWORD, NAME, PERSON_ID, STATE, MEMO, ADD_TIME, ADD_USER_ID, MOD_TIME, MOD_USER_ID, UPDATE_LOCK
		)
		VALUES(
			#{accountNo, jdbcType=VARCHAR},
			#{password, jdbcType=VARCHAR},
			#{name, jdbcType=VARCHAR},
			#{personId, jdbcType=INTEGER},
			#{state, jdbcType=TINYINT},
			#{memo, jdbcType=VARCHAR},
			#{addTime, jdbcType=TIMESTAMP},
			#{addUserId, jdbcType=INTEGER},
			#{modTime, jdbcType=TIMESTAMP},
			#{modUserId, jdbcType=INTEGER},
			#{updateLock, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="update" parameterType="com.ruban.rbac.domain.authz.Account">
		UPDATE AUTHZ_T_ACCOUNT
		SET 
			ACCOUNT_NO = #{accountNo, jdbcType=VARCHAR},
			PASSWORD = #{password, jdbcType=VARCHAR},
			NAME = #{name, jdbcType=VARCHAR},
			PERSON_ID = #{personId, jdbcType=INTEGER},
			STATE = #{state, jdbcType=TINYINT},
			MEMO = #{memo, jdbcType=VARCHAR},
			MOD_TIME = #{modTime, jdbcType=TIMESTAMP},
			MOD_USER_ID = #{modUserId, jdbcType=INTEGER},
			UPDATE_LOCK = #{updateLock, jdbcType=VARCHAR}
		WHERE ID = #{id, jdbcType=INTEGER} and UPDATE_LOCK = #{holdLock, jdbcType=VARCHAR}
	</update>
</mapper>